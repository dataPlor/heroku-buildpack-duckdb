#!/bin/bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

header() {
  echo "" || true
  echo "-----> $*" || true
}


indent() {
  sed -u 's/^/       /'
}

# Parse params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
LP_DIR=`cd $(dirname $0); cd ..; pwd`
VENDOR_DIR="$BUILD_DIR/vendor"
INSTALL_DIR="$VENDOR_DIR/duckdb"
DUCKDB_VERSION="1.1.0"
CACHE_FILE="$CACHE_DIR/duckdb-$DUCKDB_VERSION.tar.gz"
DUCKDB_DIR=$INSTALL_DIR
DUCKDB_LIB=$DUCKDB_DIR/lib
DUCKDB_INCLUDE=$DUCKDB_DIR/include
echo "-----> Install Duckdb"

if [ ! -f $CACHE_FILE ]; then
  echo "[duckdb-buildpack] Installing DuckDB from source" | indent
  echo "[duckdb-buildpack] Current directory: $(pwd)" | indent

  mkdir -p $DUCKDB_LIB
  mkdir -p $DUCKDB_INCLUDE

  # Download DuckDB C++ package
  DUCKDB_PACKAGE_URL="https://github.com/duckdb/duckdb/releases/download/v$DUCKDB_VERSION/libduckdb-linux-amd64.zip"
  echo "-----> Downloading Duckdb from $DUCKDB_PACKAGE_URL" | indent
  curl -L $DUCKDB_PACKAGE_URL -o libduckdb.zip | indent

  # Extract DuckDB files
  unzip libduckdb.zip -d libduckdb
  cp libduckdb/duckdb.* $DUCKDB_INCLUDE/
  cp libduckdb/libduckdb.so $DUCKDB_LIB/


  echo "---BUNDLE_BUILD__DUCKDB----" | indent
  echo "--with-duckdb-include=$DUCKDB_INCLUDE --with-duckdb-lib=$DUCKDB_LIB" | indent
#  # cache for future deploys
#   echo "-----> Caching ImageMagick installation"
#   cd $VENDOR_DIR
#   REL_INSTALL_DIR="duckdb"
#   tar czf $REL_INSTALL_DIR.tar.gz $REL_INSTALL_DIR

#   if [ ! -d $CACHE_DIR ]; then
#     mkdir -p $CACHE_DIR
#   fi

  # mv $REL_INSTALL_DIR.tar.gz $CACHE_FILE

else
  # cache exists, extract it
  echo "-----> Extracting DUCKDB $CACHE_FILE => $VENDOR_DIR" | indent
  mkdir -p $VENDOR_DIR
  tar xzf $CACHE_FILE -C $VENDOR_DIR
fi

topic "Writing profile script"
  # Create .profile.d directory if it doesn't exist
  mkdir -p $BUILD_DIR/.profile.d
  cat <<EOF >$BUILD_DIR/.profile.d/001_duckdb.sh
    export LIBRARY_PATH="\$DUCKDB_LIB:\$LIBRARY_PATH"
    export INCLUDE_PATH="\$DUCKDB_INCLUDE:\$INCLUDE_PATH"
EOF
  chmod +x "$BUILD_DIR/.profile.d/001_duckdb.sh"



[ -d "$DUCKDB_LIB" ] && echo "Directory $DUCKDB_LIB exists." | indent || echo "Directory $DUCKDB_LIB does not exist." | indent
[ -d "$DUCKDB_INCLUDE" ] && echo "Directory $DUCKDB_INCLUDE exists." | indent || echo "Directory $DUCKDB_INCLUDE does not exist." | indent
export LIBRARY_PATH="$BUILD_DIR/.heroku/vendor/lib/x86_64-linux-gnu:$BUILD_DIR/.heroku/vendor/lib/i386-linux-gnu:$BUILD_DIR/.heroku/vendor/lib:$LIBRARY_PATH"
export INCLUDE_PATH="$BUILD_DIR/.heroku/vendor/include:$BUILD_DIR/.heroku/vendor/include/x86_64-linux-gnu:$INCLUDE_PATH"

export | grep -E -e ' (LIBRARY_PATH|INCLUDE_PATH)='  > "$LP_DIR/export"
