#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -x

header() {
  echo "" || true
  echo "-----> $*" || true
}

export_env_dir() {
  env_dir=$1
  acceptlist_regex=${2:-''}
  denylist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$acceptlist_regex" | grep -qvE "$denylist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

output() {
  while IFS= read -r LINE; do
    if [[ "$LINE" =~ ^-----\>.* ]]; then
      echo "$LINE" || true
    else
      echo "       $LINE" || true
    fi
  done
}


# Parse params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
VENDOR_DIR="$BUILD_DIR/vendor"
INSTALL_DIR="$VENDOR_DIR/duckdb"
DUCKDB_VERSION="1.0.0"
CACHE_FILE="$CACHE_DIR/duckdb-$DUCKDB_VERSION.tar.gz"
DUCKDB_DIR=$INSTALL_DIR
DUCKDB_LIB=$DUCKDB_DIR/lib
DUCKDB_INCLUDE=$DUCKDB_DIR/include


if [ ! -f $CACHE_FILE ]; then
  header "Installing DuckDB from source"
  echo "Current directory: $(pwd)"
  export_env_dir $ENV_DIR

  mkdir -p $DUCKDB_LIB
  mkdir -p $DUCKDB_INCLUDE

  # Download DuckDB C++ package
  DUCKDB_PACKAGE_URL="https://github.com/duckdb/duckdb/releases/download/v$DUCKDB_VERSION/libduckdb-linux-amd64.zip"
  echo "Downloading $DUCKDB_PACKAGE_URL"
  curl -L $DUCKDB_PACKAGE_URL -o libduckdb.zip

  # Extract DuckDB files
  unzip libduckdb.zip -d libduckdb
  cp libduckdb/duckdb.* $DUCKDB_INCLUDE/
  cp libduckdb/libduckdb.so $DUCKDB_LIB/

  # Create .profile.d directory if it doesn't exist
  mkdir -p $BUILD_DIR/.profile.d

  echo "---BUNDLE_BUILD__DUCKDB----"
  echo "--with-duckdb-include=$DUCKDB_INCLUDE --with-duckdb-lib=$DUCKDB_LIB"


else
  # cache exists, extract it
  echo "-----> Extracting DUCKDB $CACHE_FILE => $VENDOR_DIR"
  mkdir -p $VENDOR_DIR
  tar xzf $CACHE_FILE -C $VENDOR_DIR
fi



if [ -d "$DUCKDB_LIB" ]; then
  echo "Directory $DUCKDB_LIB exists."
else
  echo "Directory $DUCKDB_LIB does not exist."
fi
if [ -d "$DUCKDB_INCLUDE" ]; then
  echo "Directory $DUCKDB_INCLUDE exists."
else
  echo "Directory $DUCKDB_INCLUDE does not exist."
fi